{"version":3,"sources":["Drawer.tsx","Interactable.tsx","displayVec.ts","dataContainer.ts","Simulations/Simulation.tsx","Function.ts","Simulations/Forces Lecture/Semicircle.tsx","Checkbox.tsx","Simulations/Gui.tsx","TimeSlider.tsx","Simulations/Forces Lecture/SemicircleGUI.tsx","Pages/Forces Lecture/SemicirclePage.tsx","Simulations/Forces Lecture/Trajectory.tsx","Simulations/Forces Lecture/TrajectoryGUI.tsx","Pages/Forces Lecture/TrajectoryPage.tsx","Slider.tsx","Simulations/Momentum Lecture/MConservationGUI.tsx","MatterJSWrappers/Box.ts","Simulations/Momentum Lecture/MConservation.tsx","Pages/Momentum Lecture/MConservationPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["drawerWidth","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","map","text","ListItem","button","component","Link","to","ListItemText","primary","Interactable","props","myRef","myP5","simulation","createRef","state","height","window","innerHeight","innerWidth","this","current","offsetWidth","p5","simulation_instance","console","log","id","ref","style","marginBottom","children","Component","displayVec","p","pos","vec","scale","strokeWeight","arrowSize","normalized","minSize","Vector","magnitude","push","stroke","fill","normScale","vec_n","normalise","drawArrow","pop","translate","x","y","line","i_hat","angle","rotate","PI","triangle","dataContainer","length","time","Array","enumerableKeys","Object","keys","k","shift","Simulation","h","counter","paused","timestep","engine","world","object_array","data","toggles","setup","store","iterations","vecDisplay","recompute","postProcess","postUpdate","iteration","reset","Engine","clear","World","undefined","add","toggle","trim","beginning","end","i","precalculate","stopped","stopCondition","update","whenRunning","createCanvas","draw","derivative","array","dt","newA","mult","sub","diff","div","simData","theta","velocity","acceleration","SemicircleSim","radius1","radius2","circle","circle1","composite","constraint","Bodies","polygon","friction","frictionAir","mass","isStatic","Composite","gravity","options","bodyA","bodyB","stiffness","Constraint","Body","setVelocity","background","c","r","r_n","v_n","perp","g","g_r","dot","g_t","a_r","a_c","magnitudeSquared","n","clone","func","remove","normal_f","gravity_r","gravity_t","acc_c","Checkbox","checked","value","setValue","ToggleButton","type","onChange","element","currentTarget","changeHandler","setChecked","fontWeight","GUI","start","pause","timeSlider","max","max_val","timesteps","counterVal","Math","round","TimeSlider","initVal","Form","Group","Label","min","target","valueAsNumber","tooltipStyle","marginTop","paddingTop","size","SemicircleGUI","Container","backgroundColor","Row","Col","xs","lg","Button","SemicirclePage","TrajectorySim","c1","j","v_i","v_j","velocity_i","velocity_j","TrajectoryGUI","Slider","step","MConservationGUI","mass1Slider","mass1","mass2Slider","mass2","displayRect","w","rectMode","CENTER","rect","position1","velocity1","acceleration1","position2","velocity2","acceleration2","MConservationSim","side_l","rectangle1","rectangle2","ground","options_b1","restitution","options_b2","rectangle","App","exact","path","TrajectoryPage","MConservationPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eecdec77.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from \"react-router-dom\"\n\nconst drawerWidth = 240;\n\n// Create drawer styles\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }),\n);\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const nav_texts = ['Semicircle', 'Trajectory', 'Two Blocks']\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            I Should Probably Name This Project\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {nav_texts.map((text) => (\n            <ListItem button key={text} component={Link} to={\"/\" + text}>\n              <ListItemText primary={text} />\n              {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n      </main>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport p5 from 'p5'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport { Simulation } from './Simulations/Simulation';\n// import GUI from './Interactables/Gui';\n\nexport interface IProps {\n    simulation: Simulation\n}\n\nexport interface IState {}\n\nexport default class Interactable extends React.Component<IProps, IState> {\n    private myRef;\n    private myP5;\n    private simulation;\n    \n    constructor(props: IProps) {\n        super(props);\n        this.myRef = React.createRef()\n        this.simulation = this.props.simulation\n        this.state = { \n            height: window.innerHeight,\n            width: window.innerWidth\n        }\n        // window.addEventListener('resize', e => this.resizeHandler())\n    }\n\n    /* resizeHandler = () => {\n        height = window.innerHeight,\n        width = window.innerWidth\n        }\n    } */\n\n    componentDidMount() {\n        //We create a new p5 object on component mount, feed it\n        this.props.simulation.width = this.myRef.current.offsetWidth\n        this.myP5 = new p5(this.props.simulation.simulation_instance, this.myRef.current)\n        console.log(this.myRef.current)\n        /* const children = this.myRef.current.children\n        console.log(children[0]) */\n    }\n\n    public render() {\n        return (<>\n            <div id=\"hummus\" ref={this.myRef} style={{marginBottom: -10}}></div>\n            {this.props.children}\n            </>\n        );\n    }\n}\n\n\n","import { Vector } from \"matter-js\";\nimport p5 from \"p5\"\n\nexport function displayVec(p: p5, pos: Vector, vec: Vector, scale: number = 1, color: string = 'white', strokeWeight: number = 5, arrowSize: number = 7, normalized: boolean = false, minSize: number = 5) {\n    // This function is specificially for displaying matter.js vectors.\n    if (Vector.magnitude(vec) * scale > minSize) {\n        p.push()\n        p.stroke(color)\n        p.strokeWeight(strokeWeight)\n        p.fill(color)\n\n        let normScale = 20 * scale;\n\n        if (normalized) {\n            let vec_n = Vector.normalise(vec);\n            drawArrow(p, pos, vec_n, normScale, arrowSize)\n        }\n        \n        else {\n            drawArrow(p, pos, vec, scale, arrowSize)\n        }\n\n        p.pop()\n    }\n}\n\nfunction drawArrow(p: p5, pos: Vector, vec: Vector, scale: number = 1, arrowSize: number = 7) {\n    p.translate(pos.x, pos.y);\n    p.line(0, 0, scale * vec.x, scale * vec.y);\n    let i_hat = Vector.create(0, 0)\n    let angle = Vector.angle(vec, i_hat)\n    p.rotate(p.PI + angle);\n    p.translate(scale * Vector.magnitude(vec) - arrowSize, 0);\n    p.triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n}","export class dataContainer {\n    length: number\n    time: Array<number>\n    constructor() {\n        this.length = 0;\n        this.time = new Array<number>()\n    }\n\n    pop() {\n        let enumerableKeys = Object.keys(this)\n        for (let k=1; k < enumerableKeys.length; k++){\n            this[enumerableKeys[k]].pop()\n        }\n        this.length -= 1;\n    }\n\n    shift() {\n        let enumerableKeys = Object.keys(this)\n        for (let k=1; k < enumerableKeys.length; k++){\n            this[enumerableKeys[k]].shift()\n        }\n        this.length -= 1\n    }\n\n    reset() {\n        this.length = 0;\n        let enumerableKeys = Object.keys(this)\n        for (let k=1; k < enumerableKeys.length; k++){\n            this[enumerableKeys[k]].length = 0\n        }\n    }\n}","import * as Matter from 'matter-js'\nimport * as React from 'react';\nimport {Engine, World} from 'matter-js'\nimport { dataContainer } from '../dataContainer';\n    \nexport abstract class Simulation {\n\n    myRef;\n    counter: number;\n    height: number;\n    width: number;\n    paused: boolean;\n    timestep = 16.6;\n    engine: Matter.Engine;\n    world: Matter.World;\n    object_array?: any\n    data = new dataContainer()\n    toggles: object;\n    p: any;\n\n    constructor(h: number) {\n        this.counter = 0;\n        this.paused = true;\n        this.myRef = React.createRef()\n\n        // Filler values\n        this.height = h;\n        this.width = 0;\n        this.toggles = {}\n\n        this.engine = Engine.create();\n        this.world = this.engine.world;\n    }\n\n    abstract setup = () => {}\n\n    // abstract changeInit = \n\n    abstract store = (iterations) => {}\n\n    abstract display = () => {}\n\n    abstract stopCondition(): boolean;\n\n    abstract vecDisplay = (counter) => {}\n\n    abstract recompute = () => {}\n\n    postProcess = () => {}\n\n    postUpdate = (iteration) => {}\n\n    reset = () => {\n        Engine.clear(this.engine);\n        World.clear(this.engine.world, false);\n        this.setup()\n        if (this.object_array !== undefined) {\n            World.add(this.world, this.object_array);\n        }\n        this.display()\n        this.counter = 0\n    }\n\n    toggle = (toggle) => {\n        return (state) => {\n            this.toggles[toggle] = state\n            this.display()\n        }\n    }\n\n    trim = (beginning, end) => {\n        for (let i = 0; i < beginning; i++) {\n            this.data.shift()\n        }\n        for (let i = 0; i < end; i++) {\n            this.data.pop()\n        }\n    } \n\n    precalculate = () => {\n        var stopped = false;\n        var iteration = 0;\n        this.data.reset()\n\n        while (!stopped) {\n            this.store(iteration)\n            stopped = this.stopCondition()\n            Engine.update(this.engine, this.timestep)\n            this.postUpdate(iteration)\n            iteration += 1\n        }\n\n        this.recompute()\n        this.reset()\n        this.postProcess()\n    }\n\n    whenRunning = () => {\n\n    }\n\n    simulation_instance = (p: any) => {\n        this.p = p;\n        p.setup = () => {\n            p.createCanvas(this.width, this.height)\n            this.reset()\n            this.precalculate()\n        }\n    \n        p.draw = () => {\n            if (!this.paused) {\n                this.display()\n                this.whenRunning()\n                this.counter += 1\n            }\n        }\n    }\n\n}","import { Vector } from 'matter-js'\n\nexport const diff = (array: Array<Vector>): Array<Vector> => {\n    let newA = new Array<Vector>()\n    newA.push(Vector.create(0, 0))\n    for (var i = 1; i < array.length - 1; i++) {\n        newA.push(Vector.mult((Vector.sub(array[i + 1], array[i - 1])), 0.5))\n    }\n    newA.push(Vector.create(0, 0))\n    return newA;\n}\n\nexport const derivative = (array: Array<Vector>, dt: number): Array<Vector> => {\n    return diff(array).map(x => Vector.div(x, dt))\n}","import {Vector, Constraint, Composite, Body, Bodies} from 'matter-js'\nimport { displayVec } from '../../displayVec';\nimport { Simulation } from \"../Simulation\";\nimport { clone } from 'mathjs';\nimport * as func from '../../Function';\nimport { dataContainer } from '../../dataContainer';\n\nclass simData extends dataContainer {\n    time = Array<number>();\n    position =Array<Matter.Vector>();\n    theta = Array<number>();\n    velocity = Array<Matter.Vector>();\n    acceleration = Array<Matter.Vector>();\n}\n\nexport class SemicircleSim extends Simulation {\n    radius1 = 10;\n    radius2 = 200;\n    circle?: any; \n    circle1?: any; \n    composite?: any;\n    constraint?: any;\n    toggles: object;\n    data = new simData()\n\n    constructor(h: number) {\n        super(h)\n        this.toggles = {\n            velocity: false,\n            normal_f: false,\n            gravity: false,\n            gravity_r: false,\n            gravity_t: false,\n            acc_c: false\n        }\n    }\n\n    setup = () => {\n        let c1_options = {friction: 0, frictionAir: 0, mass: 1};\n        let c2_options = {friction: 0, frictionAir: 0, isStatic: true}\n        this.circle = Bodies.polygon(this.width/2, this.height - this.radius2 - this.radius1, 50, this.radius1, c1_options);\n        this.circle1 = Bodies.polygon(this.width/2, this.height, 50, this.radius2, c2_options);\n        this.composite = Composite.create();\n        this.world.gravity.y = 0.588;\n        let options = {bodyA: this.circle, bodyB: this.circle1, stiffness: 1};\n        this.constraint = Constraint.create(options)\n        Composite.add(this.composite, this.constraint)\n        Body.setVelocity(this.circle, Vector.create(0.01, 0))\n        this.object_array = [this.circle,  this.circle1, this.composite]\n    }\n\n    display = () => {\n        if (this.counter < this.data.length) {\n            this.p.background(50);\n            this.p.fill(this.p.color('rgb(255,240,240)'))\n            this.p.circle(this.data.position[this.counter].x, this.data.position[this.counter].y, 2 * this.radius1)\n            this.p.fill(this.p.color('rgb(63,224,208)'))\n            this.p.circle(this.circle1.position?.x, this.circle1.position?.y, 2*this.radius2)\n            this.vecDisplay(this.counter)\n        }\n    }\n\n    vecDisplay = (c) => {\n        let r = Vector.sub(this.data.position[c], this.circle1.position)\n        let r_n = Vector.normalise(r);\n        let v_n = Vector.perp(r_n, true)\n        let g = Vector.create(0, 9.8)\n        let g_r  = Vector.mult(r_n, Vector.dot(r_n, g))\n        let g_t = Vector.mult(v_n, Vector.dot(v_n, this.data.acceleration[c]))\n        console.log(this.data.acceleration[c])\n        let a_r = Vector.mult(r_n, Vector.dot(r_n, this.data.acceleration[c]))\n        let a_c = Vector.mult(r_n, -(Vector.magnitudeSquared(this.data.velocity[c]) / 3.7))\n        let n = Vector.sub(a_r, g_r)\n\n        if (this.toggles['normal_f']) {\n            displayVec(this.p, this.data.position[c], n, 6, 'orange')\n        }\n\n        if (this.toggles['gravity']) {\n            displayVec(this.p, this.data.position[c], g, 6, 'rgb(0,180,50)');\n        }\n        \n        if (this.toggles['gravity_r']) {\n            displayVec(this.p, this.data.position[c], g_r, 6, 'red');\n        }\n\n        if (this.toggles['gravity_t']) {\n            displayVec(this.p, this.data.position[c], g_t, 6, 'yellow');\n        }\n\n        if (this.toggles['velocity']) {\n            displayVec(this.p, this.data.position[c], this.data.velocity[c], 6, 'rgb(115,194,251)')\n        }\n\n        if (this.toggles['acc_c']) {\n            displayVec(this.p, this.data.position[c], a_c, 6, 'purple');\n        }\n\n        if (this.toggles['acc_r']) {\n            displayVec(this.p, this.data.position[c], a_r, 6, 'rgb(255,215,0)');\n        }\n    }\n\n     recompute = () => {\n        var velocity = clone(this.data['velocity'])\n        var acceleration = func.derivative(velocity, (this.timestep / 1000))\n        this.data['acceleration'] = acceleration;\n    }\n\n    store = (iteration) => {\n        let time = this.timestep * iteration\n        let position = Vector.clone(this.circle.position)\n        let r = Vector.sub(this.circle.position, this.circle1.position)\n        let angle = Vector.angle(Vector.create(1, 0), r)\n        let velocity = Vector.clone(this.circle.velocity)\n        this.data.time.push(time)\n        this.data.position.push(position)\n        this.data.velocity.push(velocity)\n        this.data.theta.push(angle)\n        this.data.length += 1\n    }\n\n    postProcess = () => {\n        this.trim(2, 2)\n    }\n\n    stopCondition = () => {\n        if (this.circle.position.y >= this.height) {\n            return true\n        }\n\n        return false\n    }\n\n    postUpdate = (iteration) => {\n        if (this.data.theta[iteration] >= -0.73) {\n            Composite.remove(this.composite, this.constraint, true)\n        }\n    }\n}","import React from 'react'\nimport { Form, ToggleButton } from 'react-bootstrap';\n\ninterface ICheckbox{\n    text: String;\n    checked: boolean;\n    changeHandler: (checked: boolean) => void;\n}\n\nexport const Checkbox:React.FC<ICheckbox> = (props) => {\n\n    const [value, setValue] = React.useState<boolean>(props.checked);\n\n    const setChecked = (element) => {\n        setValue(element.currentTarget.checked);\n        props.changeHandler(element.currentTarget.checked)\n    }\n\n    return (\n        <ToggleButton\n            type=\"checkbox\"\n            variant=\"transparent\"\n            checked = {value}\n            value = \"1\"\n            onChange={(element) => {setChecked(element)}}\n            style={{fontWeight: \"bold\", color: \"lightgray\"}}\n            >\n            {'  '}{props.text}\n        </ToggleButton>\n    );\n\n}","import React from 'react'\nimport { Simulation } from './Simulation';\n\nexport interface ISimProps {\n    simulation: Simulation\n}\n\nexport interface ISimState {\n}\n\nexport default abstract class GUI extends React.Component<ISimProps, ISimState> {\n    simulation;\n\n    constructor(props: ISimProps) {\n        super(props);\n        this.simulation = this.props.simulation\n    }\n\n    start = () => {\n        this.simulation.paused = false;\n    }\n\n    reset = () => {\n        this.simulation.reset();\n    }\n\n    pause = () => {\n        this.simulation.paused = true;\n    }\n\n\n    timeSlider = (value: number, max: number | undefined) => {\n        this.pause();\n        // If max is undefined, assign it to its default value, else assign it to its specified value\n        let max_val = max ? max : 100;\n        let timesteps = this.simulation.data.length\n        let counterVal = Math.round((timesteps - 1) * (value / max_val));\n        this.simulation.counter = counterVal;\n        this.simulation.display(this.simulation.p.counter);\n        return this.simulation.data.time[counterVal]\n    }\n\n    abstract render()\n}\n\n\n","import React from 'react'\nimport { Form } from 'react-bootstrap';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\ninterface ISlider{\n  text: String;\n  min?: number;\n  max?: number;\n  initVal: number;\n  changeHandler: (value: number, max: number | undefined, display?: boolean) => number;\n}\n\nexport const TimeSlider:React.FC<ISlider> = (props) => {\n\n    const [value, setValue] = React.useState(props.initVal);\n\n    const changeHandler = (element) => {\n        setValue(element.target.valueAsNumber);\n        props.changeHandler(element.target.valueAsNumber, props.max)\n    }\n  \n    return (\n      <Form>\n        <Form.Group>\n          <Form.Label style={{fontWeight: \"bold\", color: 'lightgrey', marginBottom: 0}}>\n             {props.text}\n          </Form.Label>\n          <RangeSlider\n            min={props.min}\n            max={props.max}\n            value={value}\n            onChange={(element) => {changeHandler(element)}}\n            /* tooltipLabel={(value:number) => {\n              let time: number = props.changeHandler(value, props.max, false)\n              return time.toFixed(2)\n            }} */\n            tooltipStyle={{marginTop: 0, paddingTop: 0}}\n            size=\"sm\"\n          />\n        </Form.Group>\n      </Form>\n    );\n  \n};","import React from 'react'\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { Checkbox } from '../../Checkbox';\nimport GUI from '../Gui';\nimport { Slider } from '../../Slider';\nimport { TimeSlider } from '../../TimeSlider';\n\nexport default class SemicircleGUI extends GUI {\n\n    public render() {\n        return (<>\n            <Container style={{backgroundColor: 'rgb(100, 100, 100)'}}>\n                <Row className=\"justify-content-md-center pt-3\">\n                    <Col  xs lg=\"3\">\n                        <TimeSlider text=\"Time\" initVal={0} max={100} changeHandler={this.timeSlider} ></TimeSlider>\n                        <Button style={{marginBottom: 20}} variant=\"dark\" onClick={this.start}> Start </Button>&nbsp;\n                        <Button style={{marginBottom: 20}} variant=\"dark\" onClick={this.reset}> Reset </Button>&nbsp;\n                    </Col>\n                    <Col xs lg=\"3\">\n                        <Checkbox text=\"Velocity\" checked={false} changeHandler={this.simulation.toggle('velocity')}></Checkbox> \n                        <Checkbox text=\"Normal Force\" checked={false} changeHandler={this.simulation.toggle('normal_f')}></Checkbox>\n                        <Checkbox text=\"Gravity\" checked={false} changeHandler={this.simulation.toggle('gravity')}></Checkbox>\n                        <Checkbox text=\"Required Centripetal Force\" checked={false} changeHandler={this.simulation.toggle('acc_c')}></Checkbox>\n                    </Col>\n                    <Col xs lg=\"3\">\n                        <Checkbox text=\"Gravity: Radial Component\" checked={false} changeHandler={this.simulation.toggle('gravity_r')}></Checkbox>\n                        <Checkbox text=\"Gravity: Tangential Component\" checked={false} changeHandler={this.simulation.toggle('gravity_t')}></Checkbox>\n                        <Checkbox text=\"Radial Acceleration\" checked={false} changeHandler={this.simulation.toggle('acc_r')}></Checkbox>\n                    </Col>\n                </Row>\n            </Container>\n            </>\n        );\n    }\n}\n\n\n","import React from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport Interactable from \"../../Interactable\"\nimport { SemicircleSim } from \"../../Simulations/Forces Lecture/Semicircle\"\nimport SemicircleGUI from \"../../Simulations/Forces Lecture/SemicircleGUI\"\n\nconst SemicirclePage = () => {\n    const simulation = new SemicircleSim(600);\n\n    return (\n        <Container>\n              <Row>\n                <Col>\n                  <Interactable simulation={simulation}>\n                    <SemicircleGUI simulation={simulation}></SemicircleGUI>\n                  </Interactable>\n                </Col>\n              </Row>\n        </Container>\n    )\n}\n\nexport default SemicirclePage","import {Vector, Composite, Body, Bodies} from 'matter-js'\nimport { displayVec } from '../../displayVec';\nimport { Simulation } from \"../Simulation\";\nimport { Color } from 'p5';\nimport { clone } from 'mathjs';\nimport * as func from '../../Function';\nimport { dataContainer } from '../../dataContainer';\n\nclass simData extends dataContainer {\n    time = Array<number>();\n    position =Array<Matter.Vector>();\n    velocity = Array<Matter.Vector>();\n    acceleration = Array<Matter.Vector>();\n}\n\nexport class TrajectorySim extends Simulation {\n    radius1 = 20;\n    circle?: any; \n    c1?: Color;\n    composite?: any;\n    constraint?: any;\n    toggles: object;\n    data = new simData()\n\n    constructor(h: number) {\n        super(h)\n        this.toggles = {\n            velocity: false,\n            velocity_i: false,\n            velocity_j: false,\n            gravity: false\n        }\n    }\n\n    setup = () => {\n        this.c1 = this.p.color('rgb(255, 205, 2)')\n        let c1_options = {friction: 0, frictionAir: 0, mass: 1};\n        this.circle = Bodies.polygon(this.width/4, this.height - this.radius1, 50, this.radius1, c1_options);\n        this.composite = Composite.create();\n        this.constraint = undefined;\n        this.world.gravity.y = 0.588;\n        Body.setVelocity(this.circle, Vector.create(5, -10))\n        this.object_array = [this.circle]\n    }\n\n    display = () => {\n        if (this.counter < this.data.length) {\n            this.p.background(50);\n            this.p.fill(this.c1)\n            this.p.circle(this.data.position[this.counter].x, this.data.position[this.counter].y, 2 * this.radius1)\n            this.vecDisplay(this.counter)\n        }\n    }\n\n    vecDisplay = (c) => {\n        let i = Vector.create(0, 1)\n        let j = Vector.create(1, 0)\n        let v_i = Vector.mult(i, Vector.dot(i, this.data.velocity[c]))\n        let v_j = Vector.mult(j, Vector.dot(j, this.data.velocity[c]))\n        let scale = 10\n        let g = Vector.create(0, 9.8)\n\n        if (this.toggles['gravity']) {\n            displayVec(this.p, this.data.position[c], g, scale, 'rgb(0,250,80)');\n        }\n\n        if (this.toggles['velocity']) {\n            displayVec(this.p, this.data.position[c], this.data.velocity[c], scale, 'white')\n        }\n\n        if (this.toggles['velocity_i']) {\n            displayVec(this.p, this.data.position[c], v_i, scale, 'orange')\n        }\n\n        if (this.toggles['velocity_j']) {\n            displayVec(this.p, this.data.position[c], v_j, scale, 'red');\n        }\n    }\n\n     recompute = () => {\n        var velocity = clone(this.data['velocity'])\n        var acceleration = func.derivative(velocity, this.timestep)\n        this.data['acceleration'] = acceleration;\n    }\n\n    store = (iteration) => {\n        let time = this.timestep * iteration\n        let position = Vector.clone(this.circle.position)\n        let velocity = Vector.clone(this.circle.velocity)\n        this.data.time.push(time)\n        this.data.position.push(position)\n        this.data.velocity.push(velocity)\n        this.data.length += 1\n    }\n\n    postProcess = () => {\n        this.trim(0, 3)\n    }\n\n    stopCondition = () => {\n        if (this.circle.position.y >= this.height) {\n            return true\n        }\n\n        return false\n    }\n}","import React from 'react'\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { Checkbox } from '../../Checkbox';\nimport GUI from '../Gui';\nimport { Slider } from '../../Slider';\nimport { TimeSlider } from '../../TimeSlider';\n\nexport default class TrajectoryGUI extends GUI {\n\n    public render() {\n        return (<>\n            <Container style={{backgroundColor: 'rgb(100, 100, 100)'}}>\n                <Row className=\"justify-content-md-center pt-3\">\n                    <Col  xs lg=\"3\">\n                        <TimeSlider text=\"Time\" initVal={0} max={100} changeHandler={this.timeSlider} ></TimeSlider>\n                        <Button style={{marginBottom: 20}} variant=\"dark\" onClick={this.start}> Start </Button>&nbsp;\n                        <Button style={{marginBottom: 20}} variant=\"dark\" onClick={this.reset}> Reset </Button>&nbsp;\n                    </Col>\n                    <Col xs lg=\"3\">\n                        <Checkbox text=\"Velocity\" checked={false} changeHandler={this.simulation.toggle('velocity')}></Checkbox> \n                        <Checkbox text=\"Vertical Velocity\" checked={false} changeHandler={this.simulation.toggle('velocity_i')}></Checkbox>\n                        <Checkbox text=\"Horizontal Velocity\" checked={false} changeHandler={this.simulation.toggle('velocity_j')}></Checkbox>\n                        <Checkbox text=\"Gravity\" checked={false} changeHandler={this.simulation.toggle('gravity')}></Checkbox>\n                    </Col>\n                </Row>\n            </Container>\n            </>\n        );\n    }\n}\n\n\n","import React from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport { TrajectorySim } from \"../../Simulations/Forces Lecture/Trajectory\"\nimport TrajectoryGUI from \"../../Simulations/Forces Lecture/TrajectoryGUI\"\nimport Interactable from \"../../Interactable\"\n\nconst SemicirclePage = () => {\n    const simulation = new TrajectorySim(600)\n\n    return (\n        <Container>\n              <Row>\n                <Col>\n                  <Interactable simulation={simulation}>\n                    <TrajectoryGUI simulation={simulation}></TrajectoryGUI>\n                  </Interactable>\n                </Col>\n              </Row>\n        </Container>\n    )\n}\n\nexport default SemicirclePage\n","import React from 'react'\nimport { Form } from 'react-bootstrap';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\ninterface ISlider{\n  text: String;\n  min?: number;\n  max?: number;\n  initVal: number;\n  step: number;\n  changeHandler: (value: number) => void;\n}\n\nexport const Slider:React.FC<ISlider> = (props) => {\n\n    const [value, setValue] = React.useState(props.initVal);\n\n    const changeHandler = (element) => {\n        setValue(element.target.valueAsNumber);\n        props.changeHandler(element.target.valueAsNumber)\n    }\n  \n    return (\n      <Form>\n        <Form.Group>\n          <Form.Label style={{fontWeight: \"bold\", color: 'lightgrey', marginBottom: 0}}>\n             {props.text}\n          </Form.Label>\n          <RangeSlider\n            min={props.min}\n            max={props.max}\n            value={value}\n            step={props.step}\n            onChange={(element) => {changeHandler(element)}}\n            /* tooltipLabel={(value:number) => {\n              let time: number = props.changeHandler(value, props.max, false)\n              return time.toFixed(2)\n            }} */\n            tooltipStyle={{marginTop: 0, paddingTop: 0}}\n            size=\"sm\"\n          />\n        </Form.Group>\n      </Form>\n    );\n  \n};","import React from 'react'\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { Checkbox } from '../../Checkbox';\nimport GUI from '../Gui';\nimport { Slider } from '../../Slider';\nimport { TimeSlider } from '../../TimeSlider';\n\nexport default class MConservationGUI extends GUI {\n\n    mass1Slider = (value) => {\n        this.simulation.mass1 = value\n        this.simulation.reset()\n        this.simulation.precalculate()\n        this.simulation.counter = 0\n    }\n\n    mass2Slider = (value) => {\n        this.simulation.mass2 = value\n        this.simulation.reset()\n        this.simulation.precalculate()\n        this.simulation.counter = 0\n    }\n\n    public render() {\n        return (<>\n            <Container style={{backgroundColor: 'rgb(100, 100, 100)'}}>\n                <Row className=\"justify-content-md-center pt-3\">\n                    <Col  xs lg=\"3\">\n                        <TimeSlider text=\"Time\" initVal={0} max={100} changeHandler={this.timeSlider} ></TimeSlider>\n                        <Slider text=\"Mass for Block 1\" step={0.05} initVal={0.05} min={0.05} max={0.30} changeHandler={this.mass1Slider} ></Slider>\n                        <Slider text=\"Mass for Block 2\" step={0.05} initVal={0.05} min={0.05} max={0.30} changeHandler={this.mass2Slider} ></Slider>\n                        <Button style={{marginBottom: 20}} variant=\"dark\" onClick={this.start}> Start </Button>&nbsp;\n                        <Button style={{marginBottom: 20}} variant=\"dark\" onClick={this.reset}> Reset </Button>&nbsp;\n                    </Col>\n                    <Col xs lg=\"3\">\n                        <Checkbox text=\"Left Block's Velocity\" checked={false} changeHandler={this.simulation.toggle('velocity1')}></Checkbox>\n                        <Checkbox text=\"Right Block's Velocity\" checked={false} changeHandler={this.simulation.toggle('velocity2')}></Checkbox>\n                        <Checkbox text=\"Force on left block\" checked={false} changeHandler={this.simulation.toggle('force1')}></Checkbox>\n                        <Checkbox text=\"Force on right block\" checked={false} changeHandler={this.simulation.toggle('force2')}></Checkbox>\n                    </Col>\n                </Row>\n            </Container>\n            </>\n        );\n    }\n}\n\n\n","import p5 from 'p5'\nexport function displayRect(p: p5, x: number, y: number, w: number, h: number, angle: number) {\n    p.push();\n    p.translate(x, y);\n    p.rotate(angle);\n    p.rectMode(p.CENTER);\n    p.rect(0, 0, w, h);\n    p.pop();\n}\n","import {Vector, Body, Bodies} from 'matter-js'\nimport { displayVec } from '../../displayVec';\nimport { Simulation } from \"../Simulation\";\nimport * as func from '../../Function';\nimport { dataContainer } from '../../dataContainer';\nimport { clone } from 'lodash';\nimport { displayRect } from '../../MatterJSWrappers/Box';\n\nclass simData extends dataContainer {\n    time = Array<number>();\n    position1 =Array<Matter.Vector>();\n    velocity1 = Array<Matter.Vector>();\n    acceleration1 = Array<Matter.Vector>();\n    position2 =Array<Matter.Vector>();\n    velocity2 = Array<Matter.Vector>();\n    acceleration2 = Array<Matter.Vector>();\n}\n\nexport default class MConservationSim extends Simulation {\n    side_l = 50\n    rectangle1?: any; \n    rectangle2?: any;\n    ground?: any;\n    mass1 = 0.05;\n    mass2 = 0.05;\n    data = new simData()\n\n    setup = () => {\n        let options_b1 = {friction: 0, frictionAir: 0, mass: this.mass1, restitution: 1};\n        let options_b2 = {friction: 0, frictionAir: 0, mass: this.mass2, restitution: 1};\n        let options_g = {friction: 0, frictionAir: 0, mass: 1, isStatic: true};\n        this.rectangle1 = Bodies.rectangle(this.width/4, this.height - 5 - this.side_l / 2, this.side_l, this.side_l, options_b1);\n        this.rectangle2 = Bodies.rectangle(2 * this.width/4, this.height - 5 - this.side_l / 2, this.side_l, this.side_l, options_b2);\n        this.ground = Bodies.rectangle(this.width/2, this.height, this.width, 10, options_g);\n        this.timestep = 1/100\n        // this.world.gravity.y = 0.588;\n        Body.setVelocity(this.rectangle1, Vector.create(5, 0))\n        Body.setVelocity(this.rectangle2, Vector.create(0, 0))\n        this.object_array = [this.rectangle1, this.rectangle2, this.ground]\n    }\n\n    display = () => {\n        if (this.counter < this.data.length) {\n            this.p.background(50);\n            this.p.fill(this.p.color('rgb(255, 205, 2)'))\n            displayRect(this.p, this.data.position1[this.counter].x, this.data.position1[this.counter].y, this.side_l, this.side_l, 0)\n            this.p.fill(this.p.color('rgb(0,250,80)'))\n            displayRect(this.p, this.data.position2[this.counter].x, this.data.position2[this.counter].y, this.side_l, this.side_l, 0)\n            this.p.fill(this.p.color('rgb(100,100,100)'))\n            displayRect(this.p, this.ground.position.x, this.ground.position.y, this.width, 10, 0)\n            this.vecDisplay(this.counter)\n        }\n    }\n\n    vecDisplay = (c) => {\n        let scale = 10\n\n        if (this.toggles['velocity2']) {\n            displayVec(this.p, this.data.position2[c], this.data.velocity2[c], scale, 'white')\n        }\n\n        if (this.toggles['velocity1']) {\n            displayVec(this.p, this.data.position1[c], this.data.velocity1[c], scale, 'rgb(191,0,255)');\n        }\n\n        if (this.toggles['force1']) {\n            displayVec(this.p, this.data.position1[c], Vector.mult(this.data.acceleration1[c], this.rectangle1.mass), scale / 3, 'rgb(0,250,80)', 10)\n        }\n\n        if (this.toggles['force2']) {\n            displayVec(this.p, this.data.position2[c], Vector.mult(this.data.acceleration2[c], this.rectangle2.mass), scale / 3, 'yellow', 10)\n        }\n    }\n\n     recompute = () => {\n        var velocity1 = clone(this.data.velocity1)\n        var velocity2 = clone(this.data.velocity2)\n        var acceleration1 = func.derivative(velocity1, this.timestep)\n        var acceleration2 = func.derivative(velocity2, this.timestep)\n        this.data.acceleration1 = acceleration1;\n        this.data.acceleration2 = acceleration2;\n    }\n\n    store = (iteration) => {\n        let time = this.timestep * iteration\n        let position1 = Vector.clone(this.rectangle1.position)\n        let velocity1 = Vector.clone(this.rectangle1.velocity)\n        let position2 = Vector.clone(this.rectangle2.position)\n        let velocity2 = Vector.clone(this.rectangle2.velocity)\n        this.data.time.push(time)\n        this.data.position1.push(position1)\n        this.data.velocity1.push(velocity1)\n        this.data.position2.push(position2)\n        this.data.velocity2.push(velocity2)\n        this.data.length += 1\n    }\n\n    postProcess = () => {\n        this.trim(8, 3)\n    }\n\n    stopCondition = () => {\n        if (this.data.time.length >= 100) {\n            return true\n        }\n        return false\n    }\n}","import React from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport Interactable from \"../../Interactable\"\nimport MConservationGUI from \"../../Simulations/Momentum Lecture/MConservationGUI\"\nimport MConservationSim from \"../../Simulations/Momentum Lecture/MConservation\"\n\n\nconst SemicirclePage = () => {\n    const simulation = new MConservationSim(600)\n\n    return (\n        <Container>\n              <Row>\n                <Col>\n                  <Interactable simulation={simulation}>\n                    <MConservationGUI simulation={simulation}></MConservationGUI>\n                  </Interactable>\n                </Col>\n              </Row>\n        </Container>\n    )\n}\n\nexport default SemicirclePage\n","import * as React from 'react';\nimport './App.css'\nimport Drawer from './Drawer';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport SemicirclePage from './Pages/Forces Lecture/SemicirclePage';\nimport TrajectoryPage from './Pages/Forces Lecture/TrajectoryPage';\nimport MConservationPage from './Pages/Momentum Lecture/MConservationPage'\n// Alternate solution:\n// As soon as the component is mounted get the references??\n// At a fundamental level, I need some way to retrieve the P5 object from the simulation object.\n// To create the P5 object, I need the reference to its container, which is housed in the simulation object.\n// The reference to the objects container is only known when the object has already been rendered.\n// Hence, I need a way of getting the P5 object out of the sketch on \nclass App extends React.Component {\n\n  render() {\n    return (\n    <>\n      <BrowserRouter>\n      <Drawer></Drawer>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <SemicirclePage></SemicirclePage>\n          </Route>\n          <Route path=\"/Semicircle\">\n            <SemicirclePage></SemicirclePage>\n          </Route>\n          <Route path=\"/Trajectory\">\n            <TrajectoryPage></TrajectoryPage>\n          </Route>\n          <Route path=\"/Two Blocks\">\n            <MConservationPage></MConservationPage>\n          </Route>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}